#
# Bias and shot noise from Emanuele Castorina
#
# Evolution of HI bias and shot noise as a function of redshift. Then nP includes nonlinear damping 
# From equation 4 and 5 of https://arxiv.org/abs/1609.05157. In equation 7, alpha=1 and M_{min} = 5*10^9 Msun/h to fit DLA bias b_{DLA}=2 at z=2.3
# The only ASSUMPTION is that M_{min} does not depend on redshift, note also that bias and shot noise are independent from \Omega_{HI}
# Not to be trusted below z~1.5
# | z | b_{HI}(z)  | n_{eff}(z)  |  nP_{0.2}(z) |
#
# AS: updated 2/25/18
#
import numpy as np
from scipy.interpolate import interp1d
z_, bias_, nbar_, nP=np.array(map(lambda x:map(float,x.split()),
"""0   	1.33659 	0.00066083  	0.582292 
0.15	1.361511	0.0008738778	0.8411342
0.3 	1.389651	0.001154436 	1.181139 
0.45	1.420774	0.001516439 	1.612019 
0.6 	1.454665	0.001974334 	2.142182 
0.75	1.491148	0.0025426   	2.779038 
0.9 	1.530082	0.003235229 	3.529192 
1.05	1.571361	0.004065181 	4.398496 
1.2 	1.614906	0.005043821 	5.391953 
1.35	1.660661	0.006180378 	6.513541 
1.5 	1.708584	0.007481427 	7.765987 
1.65	1.75865 	0.008950437 	9.150536 
1.8 	1.810838	0.0105874   	10.66672 
1.95	1.865138	0.01238857  	12.31219 
2.1 	1.921542	0.01434631  	14.08252 
2.25	1.980047	0.01644905  	15.97113 
2.4 	2.04065 	0.01868143  	17.96926 
2.55	2.103354	0.02102451  	20.06595 
2.7 	2.168158	0.02345614  	22.2481  
2.85	2.235067	0.02595143  	24.50065 
3.  	2.304082	0.02848329  	26.80676 
3.15	2.375207	0.03102304  	29.14803 
3.3 	2.448446	0.03354113  	31.5048  
3.45	2.523801	0.03600774  	33.8565  
3.6 	2.601276	0.03839353  	36.18197 
3.75	2.680874	0.04067025  	38.45986 
3.9 	2.762598	0.04281134  	40.669   
4.05	2.846452	0.04479248  	42.78875 
4.2 	2.932438	0.04659205  	44.79937 
4.35	3.020559	0.04819144  	46.68237 
4.5 	3.110817	0.04957541  	48.42076 
4.65	3.203216	0.05073216  	49.99938 
4.8 	3.297757	0.05165349  	51.40504 
4.95	3.394443	0.05233475  	52.62673 
5.1 	3.493276	0.05277476  	53.65572 
5.25	3.594257	0.0529756   	54.48567 
5.4 	3.697389	0.05294245  	55.11255 
5.55	3.802673	0.05268327  	55.53474 
5.7 	3.910111	0.05220847  	55.75285 
5.85	4.019706	0.05153062  	55.76968 
6.  	4.131457	0.05066401  	55.59005 """.split("\n"))).T
castorinaBias=interp1d(z_,bias_)
castorinaPn=interp1d(z_,1./nbar_)
